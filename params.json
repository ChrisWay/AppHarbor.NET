{"name":"AppHarbor.NET","body":"### License: Apache License 2.0\r\n\r\n### Twitter\r\n*  News and updates for AppHarbor.NET: [@AppHarborNET][2]\r\n*  In addition you can also follow my personal account: [@ntziolis][3]\r\n\r\n### Features\r\n\r\n* Full support for the AppHarbor API (2012.03.21)\r\n* Managed API Access (currently .NET 3.5, could be made .NET 2.0 compatible if requested)\r\n* Implements AppHarbor OAuth header: `Authorization: BEARER :access_token`\r\n* Sample web application with AppHarbor OAuth sample\r\n* Unit tested\r\n\r\n### Install via NuGet\r\n````nuget\r\nPM> Install-Package AppHarbor.NET\r\n````\r\n\r\n### Usage\r\n\r\n#### Create Api instance with token\r\n\r\n```csharp\r\n// create an Api instance with the token obtained from oAuth\r\nvar api = new AppHarborApi(new AuthInfo()\r\n{\r\n\tAccessToken = \"token obtained via oAuth\"\r\n});\r\n```\r\n\r\n#### Get list of AppHarbor applications\r\n\r\n```csharp\r\n// get a list of all applications\r\nvar applications = api.GetApplications();\r\n\r\nforeach (var application in applications)\r\n{\r\n\tConsole.WriteLine(string.Format(\"Application name: {0}, Url: {1}\", \r\n\t\tapplication.Name, application.Url));\r\n}\r\n```\r\n\r\n#### Create new AppHarbor applications\r\n\r\n```csharp\r\n// creating always returns a CreateResult\r\n// which has a Status, ID, Location\r\nvar createResult = api.CreateApplication(\"New Application Name\", null);\r\n\r\n// based on the Status decide on what todo\r\nswitch (createResult.Status)\r\n{\r\n\tcase CreateStatus.Created:\r\n\t\t{\r\n\t\t\tvar newID = createResult.ID;\r\n\t\t\tvar newURL = createResult.Location;\r\n\r\n\t\t\t// get actual application object via the api\r\n\t\t\tvar newApplication = api.GetApplication(newID);\r\n\r\n\t\t\t// more code\r\n\t\t\tbreak;\r\n\t\t}\r\n\tcase CreateStatus.AlreadyExists:\r\n\tcase CreateStatus.Undefined:\r\n\t\t{\r\n\t\t\t// handle\r\n\t\t\tbreak;\r\n\t\t}\r\n\tdefault:\r\n\t\tbreak;\r\n}\r\n```\r\n\r\n### Sample Web Application Project\r\n\r\n* Basic OAuth Access Token retrieval implementation\r\n* more to come\r\n\r\n### Todo\r\n\r\n* More unit tests\r\n* Add integration tests\r\n* Add XML Comments for public methods\r\n* Expand sample web application\r\n\r\n### Links\r\n\r\n* [AppHarbor API documentation][1]\r\n* [RestSharp on github][4]\r\n\r\n  [1]: http://support.appharbor.com/kb/api/api-overview\r\n  [2]: https://twitter.com/AppHarborNET\r\n  [3]: https://twitter.com/ntziolis \r\n  [4]: https://github.com/restsharp/RestSharp","tagline":"A .NET client for the AppHarbor API","google":"UA-30552326-1","note":"Don't delete this file! It's used internally to help with page regeneration."}